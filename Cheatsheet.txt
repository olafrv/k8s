k get componentstatuses
k get nodes
k describe nodes 
k get {deployments,services} --namespace=kube-system {kube-dns,kubernetes-dashboard}
k get daemonsets --namespace=kube-system kube-proxy
k config set-context my-context --namespace=mystuff
k config use-context my-context

k get pods my-pod -o jsonpath --template={.status.podIp}
k describe <resource-name> <obt-name>

k {apply|delete} -f obj.yaml
k edit <resource-name> <obt-name>
k delete <resource-name> <obt-name>

k label pods bar color=red
k label pods bar -color

k logs <pod-name>
k exec <pod-name> date
k exec -it <pod-name> -- bash
k cp <pod-name>:/path/to/rfile /path/to/lfile

k run kuard --image=gcr.io/kuar-demo/kuard-amd64:1
k get pods
k delete deployments/kuard

Healthchecks: httpGet, tcpSocket, exec (script)
Resources: Check if enough to run, Per Container not per Pod.
Limits: Scheduling pods to nodes do not exceed nodes capacity.
Volume: emptyDir, hostDir, 

k apply <<EOF
apiVersion: v1
kind: Pod
metadata:
  name: kuard
spec:
  containers:
    - image: gcr.io/kuard-demo/kuard-amd64:1
      name: kuard
      metadata:
        annotations:
          example.com/icon-url: "go.com"
      resources:
        requests:
          cpu: "500m"
          memory: "128Mi"
        limits:
          cpu: "1000m"
          memory: "256Mi"
      volumeMounts:
        - mountPath: "/data"
          name: "kguard-data"
      ports:
        - containerPort: 8080
          name: http
          protocol: tcp
      liveness:
        httpGet:
          path: /healthy
          port: 8000
        initialDelaySeconds: 5
        timeoutSeconds: 1
        periodSeconds: 10
        failureThreshold: 3

EOF
k describe pods kuard
k delete pods/kuard
k delete -f kuard-pod.yaml
k port-forward kuard 8080:8080

k run alpaca-prod --image= --replicas=2 --labels="ver=1,app=alpaca,env=prod"
k get deployments --show-labels

k label deployments alpaca-test "canary=true"
k label get deployments -L canary
k label deployments alpaca-test "canary-"

k get pods labels --show-labels
k get pods --selector="ver"
k get pods --selector="ver=2"
k get pods --selector="ver in (1,2)"

k delete deployments --all
